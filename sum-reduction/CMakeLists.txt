cmake_minimum_required(VERSION 3.22)
project(sum-reduction VERSION 0.0.1 DESCRIPTION "Nomp examples" LANGUAGES C)

option(ENABLE_OPENCL "Build OpenCL example" ON)
option(ENABLE_OPENMP "Build OpenMP example" ON)
option(ENABLE_CUDA "Build Cuda example" OFF)
option(ENABLE_ISPC "Build ISPC example" OFF)
option(ENABLE_OMP_OFFLOAD "Enable GPU offloading" OFF)

if (ENABLE_OPENCL)
  add_executable(ocl-sum-reduction opencl.c)
  find_package(OpenCL REQUIRED)
  target_link_libraries(ocl-sum-reduction PRIVATE OpenCL::OpenCL)
endif()
if (ENABLE_OPENMP)
  add_executable(omp-sum-reduction openmp.c)
  find_package(OpenMP REQUIRED)
  target_link_libraries(omp-sum-reduction PRIVATE OpenMP::OpenMP_C)
endif()
if (ENABLE_CUDA)
  enable_language(CUDA)
  add_executable(cuda-sum-reduction cuda.cu)
endif()
if (ENABLE_ISPC)
  add_custom_command(OUTPUT sum-reduction.o sum-reduction.h
                    COMMAND ispc --target=avx2 --arch=x86-64
                            ${CMAKE_SOURCE_DIR}/sum-reduction.ispc
                            -h sum-reduction.h -o sum-reduction.o
                    DEPENDS sum-reduction.ispc)
  add_library(sum-reduction STATIC sum-reduction.o)
  set_target_properties(sum-reduction PROPERTIES LINKER_LANGUAGE C)
  add_executable(ispc-sum-reduction ispc.c)
  target_link_libraries(ispc-sum-reduction sum-reduction)
  target_compile_definitions(ispc-sum-reduction PRIVATE KERNEL_FILE="${CMAKE_BINARY_DIR}/sum-reduction.h")
endif()
if (ENABLE_OMP_OFFLOAD)
  add_executable(omp-offload-sum-reduction omp_offload.c)
  find_package(OpenMP REQUIRED)
  include(../cmake/OpenMPRuntime.cmake)
endif()
